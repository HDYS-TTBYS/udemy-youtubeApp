[{"/usr/src/app/src/App.tsx":"1","/usr/src/app/src/index.tsx":"2","/usr/src/app/src/components/NavBar.tsx":"3","/usr/src/app/src/reportWebVitals.ts":"4","/usr/src/app/src/components/Login.tsx":"5","/usr/src/app/src/context/apiContext.tsx":"6","/usr/src/app/src/components/VideoList.tsx":"7","/usr/src/app/src/components/Main.tsx":"8","/usr/src/app/src/components/VideoDetail.tsx":"9","/usr/src/app/src/components/VideoItem.tsx":"10"},{"size":787,"mtime":1612533440000,"results":"11","hashOfConfig":"12"},{"size":833,"mtime":1612276008000,"results":"13","hashOfConfig":"12"},{"size":1116,"mtime":1612276368000,"results":"14","hashOfConfig":"12"},{"size":425,"mtime":1612102983000,"results":"15","hashOfConfig":"12"},{"size":7812,"mtime":1612447663000,"results":"16","hashOfConfig":"12"},{"size":5504,"mtime":1612789978000,"results":"17","hashOfConfig":"12"},{"size":532,"mtime":1612790517000,"results":"18","hashOfConfig":"12"},{"size":4714,"mtime":1612535044000,"results":"19","hashOfConfig":"12"},{"size":3025,"mtime":1612792416000,"results":"20","hashOfConfig":"12"},{"size":1335,"mtime":1612790084000,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"s7r4g",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"27"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/usr/src/app/src/App.tsx",["47"],"import React from 'react';\nimport './App.css';\n\nimport indigo from \"@material-ui/core/colors/indigo\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport { MuiThemeProvider, ThemeProvider as MuThemeProvider } from \"@material-ui/core/styles\";\nimport ApiContextProvider from './context/apiContext';\nimport NavBar from './components/NavBar';\nimport Main from './components/Main';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: indigo,\n    secondary: {\n      main: \"#f44336\",\n    },\n  },\n  typography: {\n    fontFamily: \"Comic Neue\",\n  },\n});\n\n\nfunction App() {\n  return (\n    <ApiContextProvider>\n      <MuiThemeProvider theme={theme}>\n\n        <NavBar />\n        <Main />\n\n      </MuiThemeProvider>\n    </ApiContextProvider>\n  );\n}\n\nexport default App;\n","/usr/src/app/src/index.tsx",[],["48","49"],"/usr/src/app/src/components/NavBar.tsx",[],"/usr/src/app/src/reportWebVitals.ts",[],"/usr/src/app/src/components/Login.tsx",[],"/usr/src/app/src/context/apiContext.tsx",["50"],"import React, { createContext, useState, useEffect } from \"react\";\nimport { withCookies } from \"react-cookie\";\nimport axios from \"axios\";\n\nconst apiBaseURL = \"http://localhost:8000\"\n\nexport const ApiContext = createContext<any>(null);\n\n\nexport interface Video {\n    id?: string\n    title?: string\n    video?: string\n    thumnail?: string\n    like?: number\n    dislike?: number\n}\n\nconst ApiContextProvider = (props: any) => {\n    const token = props.cookies.get(\"jwt-token\");\n    const [videos, setVideos] = useState<Video[]>([]);\n    const [title, setTitle] = useState(\"\");\n    const [video, setVideo] = useState<File | null>(null);\n    const [thumnail, setThumnail] = useState<File | null>(null);\n    const [selectedVideo, setSelectedVideo] = useState<Video | null>(null);\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n\n    useEffect(() => {\n        const getVideos = async () => {\n            try {\n                const res = await axios.get(\n                    `${apiBaseURL}/api/videos/`,\n                    {\n                        headers: {\n                            Authorization: `JWT ${token}`,\n                        },\n                    }\n                );\n                setVideos(res.data);\n            } catch {\n                console.log(\"error\");\n                props.cookies.remove(\"jwt-token\");\n                window.location.href = \"/\";\n            }\n        };\n        getVideos();\n    }, [token]);\n\n    const newVideo = async () => {\n        const uploadData = new FormData();\n        uploadData.append(\"title\", title);\n        uploadData.append(\"video\", video!, video?.name);\n        uploadData.append(\"thumnail\", thumnail!, thumnail?.name);\n        try {\n            const res = await axios.post(\n                `${apiBaseURL}/api/videos/`,\n                uploadData,\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `JWT ${token}`,\n                    },\n                }\n            );\n            setVideos([...videos, res.data]);\n            setModalIsOpen(false);\n            setTitle(\"\");\n            setVideo(null);\n            setThumnail(null);\n        } catch {\n            console.log(\"error\");\n            props.cookies.remove(\"jwt-token\");\n            window.location.href = \"/\";\n        }\n    };\n\n    const deleteVideo = async () => {\n        try {\n            await axios.delete(\n                `${apiBaseURL}/api/videos/${selectedVideo?.id}/`,\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `JWT ${token}`,\n                    },\n                }\n            );\n            setSelectedVideo(null);\n            setVideos(videos.filter((item) => item.id !== selectedVideo?.id));\n        } catch {\n            console.log(\"error\");\n            props.cookies.remove(\"jwt-token\");\n            window.location.href = \"/\";\n        }\n    };\n\n    const incrementLike = async () => {\n        try {\n            const uploadData = new FormData();\n            const like = (selectedVideo?.like! + 1).toString();\n            uploadData.append(\"like\", like);\n\n            const res = await axios.patch(\n                `${apiBaseURL}/api/videos/${selectedVideo?.id}/`,\n                uploadData,\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `JWT ${token}`,\n                    },\n                }\n            );\n            setSelectedVideo({ ...selectedVideo, like: res.data.like });\n            setVideos(\n                videos.map((item) => (item.id === selectedVideo?.id ? res.data : item))\n            );\n        } catch {\n            console.log(\"error\");\n            props.cookies.remove(\"jwt-token\");\n            window.location.href = \"/\";\n        }\n    };\n\n    const incrementDislike = async () => {\n        try {\n            const uploadData = new FormData();\n            const dislike = (selectedVideo?.dislike! + 1).toString();\n            uploadData.append(\"dislike\", dislike);\n            const res = await axios.patch(\n                `${apiBaseURL}/api/videos/${selectedVideo?.id}/`,\n                uploadData,\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `JWT ${token}`,\n                    },\n                }\n            );\n            setSelectedVideo({ ...selectedVideo, dislike: res.data.dislike });\n            setVideos(\n                videos.map((item) => (item.id === selectedVideo?.id ? res.data : item))\n            );\n        } catch {\n            console.log(\"error\");\n            props.cookies.remove(\"jwt-token\");\n            window.location.href = \"/\";\n        }\n    };\n\n    return (\n        <ApiContext.Provider\n            value={{\n                videos,\n                title,\n                setTitle,\n                video,\n                setVideo,\n                thumnail,\n                setThumnail,\n                selectedVideo,\n                setSelectedVideo,\n                modalIsOpen,\n                setModalIsOpen,\n                newVideo,\n                deleteVideo,\n                incrementLike,\n                incrementDislike,\n            }}\n        >\n            {props.children}\n        </ApiContext.Provider>\n    );\n};\n\nexport default withCookies(ApiContextProvider);\n","/usr/src/app/src/components/VideoList.tsx",[],"/usr/src/app/src/components/Main.tsx",["51","52","53","54","55","56","57"],"import React, { useContext } from 'react'\nimport { ApiContext } from \"../context/apiContext\";\nimport Modal from \"react-modal\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport { IoMdClose } from \"react-icons/io\";\nimport { RiUploadCloud2Line } from \"react-icons/ri\";\nimport { FaVideo } from \"react-icons/fa\";\nimport { BsImages } from \"react-icons/bs\";\n\nimport VideoList from \"./VideoList\";\nimport VideoItem from \"./VideoItem\";\nimport VideoDetail from \"./VideoDetail\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        textAlign: \"center\",\n    },\n    grid: {\n        justifyContent: \"center\",\n    },\n}));\n\nconst Main = () => {\n    const classes = useStyles();\n    Modal.setAppElement(\"#root\");\n    const {\n        videos,\n        title,\n        setTitle,\n        video,\n        setVideo,\n        thumnail,\n        setThumnail,\n        selectedVideo,\n        setSelectedVideo,\n        modalIsOpen,\n        setModalIsOpen,\n        newVideo,\n        deleteVideo,\n        incrementLike,\n        incrementDislike,\n    } = useContext(ApiContext);\n\n    const customStyles = {\n        content: {\n            top: \"30%\",\n            left: \"43%\",\n            right: \"auto\",\n            bottom: \"auto\",\n        },\n    };\n\n    const handleEditMovie = () => {\n        const fileInput = document.getElementById(\"mp4Input\");\n        fileInput?.click();\n    };\n\n    const handleEditPicture = () => {\n        const fileInput = document.getElementById(\"imageInput\");\n        fileInput?.click();\n    };\n\n    return (\n        <>\n            <Grid container className={classes.grid}>\n                <Grid item xs={11}>\n                    <Grid container spacing={5}>\n                        <Grid item xs={12}></Grid>\n\n                        <Grid item xs={1}>\n                            <Fab\n                                color=\"primary\"\n                                aria-label=\"add\"\n                                onClick={() => setModalIsOpen(true)}\n                            >\n                                <AddIcon />\n                            </Fab>\n                        </Grid>\n\n                        <Grid item xs={8}>\n                            <VideoDetail />\n                        </Grid>\n\n                        <Grid item xs={3}>\n                            <VideoList />\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n\n            <Modal\n                isOpen={modalIsOpen}\n                onRequestClose={() => setModalIsOpen(false)}\n                style={customStyles}\n            >\n                <Typography>ムービータイトル</Typography>\n                <br />\n                <TextField\n                    type=\"text\"\n                    onChange={(event) => setTitle(event.target.value)}\n                />\n                <br />\n                <br />\n                <Container className={classes.container}>\n                    <input\n                        type=\"file\"\n                        id=\"mp4Input\"\n                        hidden\n                        onChange={(event) => event.target.files && setVideo(event.target.files[0])}\n                    />\n\n                    <IconButton onClick={handleEditMovie}>\n                        <FaVideo className=\"photo\" />\n                        {video && video.name}\n                    </IconButton>\n\n                    <input\n                        type=\"file\"\n                        id=\"imageInput\"\n                        hidden\n                        onChange={(event) => event.target.files && setThumnail(event.target.files[0])}\n                    />\n\n                    <IconButton onClick={handleEditPicture}>\n                        <BsImages className=\"photo\" />\n                        {thumnail && thumnail.name}\n                    </IconButton>\n                    <br />\n\n                    {title && video && thumnail && (\n                        <button className=\"btn-modal\" onClick={() => newVideo()}>\n                            <RiUploadCloud2Line />\n                        </button>\n                    )}\n                    <button className=\"btn-modal\" onClick={() => setModalIsOpen(false)}>\n                        <IoMdClose />\n                    </button>\n                </Container>\n            </Modal>\n        </>\n    )\n}\n\nexport default Main\n","/usr/src/app/src/components/VideoDetail.tsx",["58"],"import React, { useContext } from 'react'\nimport { ApiContext } from \"../context/apiContext\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Fab from \"@material-ui/core/Fab\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport RaactPlayer from \"react-player\";\n\nimport { AiFillLike } from \"react-icons/ai\";\nimport { AiFillDislike } from \"react-icons/ai\";\nimport { IoLogoYoutube } from \"react-icons/io\";\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        paddingLeft: theme.spacing(2),\n    },\n    delete: {\n        margin: theme.spacing(2),\n    },\n    like: {\n        paddingTop: theme.spacing(3),\n    },\n}))\n\nconst VideoDetail = () => {\n    const classes = useStyles();\n    const {\n        selectedVideo,\n        deleteVideo,\n        incrementLike,\n        incrementDislike } = useContext(ApiContext);\n    if (!selectedVideo)\n        return (\n            <div className=\"container\">\n                <button className=\"wait\">\n                    <IoLogoYoutube />\n                </button>\n            </div>\n        );\n    return (\n        <>\n            <div className=\"wrapper\">\n                <RaactPlayer\n                    className=\"player\"\n                    url={selectedVideo.video}\n                    width=\"100%\"\n                    height=\"100%\"\n                    playing\n                    controls\n                    disablePictureInPicture\n                    config={{\n                        file: {\n                            attributes: {\n                                controlsList: \"nodownload\",\n                                disablePictureInPicture: true,\n                            },\n                        },\n                    }}\n                />\n            </div>\n            <Grid container alignItems=\"center\">\n                <Grid item xs={10}>\n                    <Typography className={classes.title} variant=\"h6\">\n                        {selectedVideo.title}\n                    </Typography>\n                </Grid>\n\n                <Grid item xs={1}>\n                    <button className=\"like\" onClick={() => incrementLike()}>\n                        <AiFillLike />\n                        <Typography>{selectedVideo.like}</Typography>\n                    </button>\n                </Grid>\n                <Grid item xs={1}>\n                    <button className=\"like\" onClick={() => incrementDislike()}>\n                        <AiFillDislike />\n                        <Typography>{selectedVideo.dislike}</Typography>\n                    </button>\n                </Grid>\n            </Grid>\n            <Fab\n                className={classes.delete}\n                color=\"primary\"\n                aria-label=\"delete\"\n                onClick={() => deleteVideo()}\n            >\n                <DeleteIcon />\n            </Fab>\n        </>\n    )\n}\n\nexport default VideoDetail\n","/usr/src/app/src/components/VideoItem.tsx",[],{"ruleId":"59","severity":1,"message":"60","line":6,"column":45,"nodeType":"61","messageId":"62","endLine":6,"endColumn":60},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":47,"column":8,"nodeType":"69","endLine":47,"endColumn":15,"suggestions":"70"},{"ruleId":"59","severity":1,"message":"71","line":20,"column":8,"nodeType":"61","messageId":"62","endLine":20,"endColumn":17},{"ruleId":"59","severity":1,"message":"72","line":36,"column":9,"nodeType":"61","messageId":"62","endLine":36,"endColumn":15},{"ruleId":"59","severity":1,"message":"73","line":43,"column":9,"nodeType":"61","messageId":"62","endLine":43,"endColumn":22},{"ruleId":"59","severity":1,"message":"74","line":44,"column":9,"nodeType":"61","messageId":"62","endLine":44,"endColumn":25},{"ruleId":"59","severity":1,"message":"75","line":48,"column":9,"nodeType":"61","messageId":"62","endLine":48,"endColumn":20},{"ruleId":"59","severity":1,"message":"76","line":49,"column":9,"nodeType":"61","messageId":"62","endLine":49,"endColumn":22},{"ruleId":"59","severity":1,"message":"77","line":50,"column":9,"nodeType":"61","messageId":"62","endLine":50,"endColumn":25},{"ruleId":"59","severity":1,"message":"78","line":6,"column":8,"nodeType":"61","messageId":"62","endLine":6,"endColumn":17},"@typescript-eslint/no-unused-vars","'MuThemeProvider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["79"],"no-negated-in-lhs",["80"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.cookies'. Either include it or remove the dependency array.","ArrayExpression",["81"],"'VideoItem' is defined but never used.","'videos' is assigned a value but never used.","'selectedVideo' is assigned a value but never used.","'setSelectedVideo' is assigned a value but never used.","'deleteVideo' is assigned a value but never used.","'incrementLike' is assigned a value but never used.","'incrementDislike' is assigned a value but never used.","'Container' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},"Update the dependencies array to be: [props.cookies, token]",{"range":"84","text":"85"},[1437,1444],"[props.cookies, token]"]